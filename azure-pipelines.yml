trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  imageVersion: $[counter(variables['Build.SourceBranchName'], 1)] # Incrémente automatiquement le numéro de version

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.17'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'clean install'

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'test'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'

- task: Docker@2
  displayName: 'Login to Docker Hub'
  inputs:
    containerRegistry: 'docker' # Remplacez par le nom de votre connexion de service

- task: Docker@2
  displayName: 'Build and Push Docker Image'
  inputs:
    containerRegistry: 'docker' # Remplacez par le nom de votre connexion de service
    repository: 'mohamedrouahi/spring-backend'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: '$(imageVersion)'

- task: Kubernetes@1
  displayName: 'Deploy to Kubernetes'
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'KubernetesConnection'
    namespace: 'default'
    command: 'apply'
    useConfigurationFile: true
    configuration: 'deployment.yaml'
    arguments: '-n default -f deployment.yaml'

- script: |
    kubectl set image deployment/spring-backend spring-backend=mohamedrouahi/spring-backend:$(imageVersion) -n default
  displayName: 'Update Kubernetes Deployment with New Image'
